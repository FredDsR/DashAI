{"ast":null,"code":"import React from\"react\";import{StringArgument,EnumArgument,NumberArgument}from\"./Arguments\";import cx from\"../utils/cx\";import styles from\"../App.module.css\";import ClassFilter from\"./ClassFilter\";import{ArgumentType}from\"../models/insightsConfig\";function Filter(props){var createComponentFromConfig=function createComponentFromConfig(name,config){switch(config.type){case ArgumentType.Number:return/*#__PURE__*/React.createElement(NumberArgument,{key:name,name:name,limit:config.limit,value:config.value,handleInputChange:props.handleArgumentChange});case ArgumentType.Enum:return/*#__PURE__*/React.createElement(EnumArgument,{key:name,name:name,limit:config.limit,value:config.value,handleInputChange:props.handleArgumentChange});case ArgumentType.String:return/*#__PURE__*/React.createElement(StringArgument,{key:name,name:name,value:config.value,handleInputChange:props.handleArgumentChange});default:throw new Error(\"Unsupported config type: \"+config.type);}};var methods=props.methods.map(function(item,key){return/*#__PURE__*/React.createElement(\"option\",{key:key,value:item},item);});var method_args_components=null;if(props.selectedMethod in props.methodArguments){var method_arguments=props.methodArguments[props.selectedMethod];method_args_components=Object.keys(method_arguments).map(function(key,idx){return createComponentFromConfig(key,method_arguments[key]);});}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__title\"]},\"Filter by Classes\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__body\"]},/*#__PURE__*/React.createElement(ClassFilter,{handleClassDelete:props.handleClassDelete,handleClassAdd:props.handleClassAdd,suggestedClasses:props.suggestedClasses,classes:props.classes}))),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__title\"]},\"Filter by Instances\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__body\"]},\"Prediction:\",\" \",/*#__PURE__*/React.createElement(\"select\",{className:styles.select,name:\"prediction\",onChange:props.handleInputChange,value:props.prediction},/*#__PURE__*/React.createElement(\"option\",{value:\"all\"},\"All\"),/*#__PURE__*/React.createElement(\"option\",{value:\"correct\"},\"Correct\"),/*#__PURE__*/React.createElement(\"option\",{value:\"incorrect\"},\"Incorrect\")))),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__title\"]},\"Choose Attribution Method\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__body\"]},\"Attribution Method:\",\" \",/*#__PURE__*/React.createElement(\"select\",{className:styles.select,name:\"selected_method\",onChange:props.handleInputChange,value:props.selectedMethod},methods))),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__title\"]},\"Attribution Method Arguments\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"filter-panel__column__body\"]},method_args_components)),/*#__PURE__*/React.createElement(\"div\",{className:cx([styles[\"filter-panel__column\"],styles[\"filter-panel__column--end\"]])},/*#__PURE__*/React.createElement(\"button\",{className:cx([styles.btn,styles[\"btn--outline\"],styles[\"btn--large\"]])},\"Fetch\"))));}export default Filter;","map":{"version":3,"sources":["/home/ubuntu/DashAI/captum/insights/attr_vis/frontend/src/components/Filter.tsx"],"names":["React","StringArgument","EnumArgument","NumberArgument","cx","styles","ClassFilter","ArgumentType","Filter","props","createComponentFromConfig","name","config","type","Number","limit","value","handleArgumentChange","Enum","String","Error","methods","map","item","key","method_args_components","selectedMethod","methodArguments","method_arguments","Object","keys","idx","handleSubmit","handleClassDelete","handleClassAdd","suggestedClasses","classes","select","handleInputChange","prediction","btn"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,YAAzB,CAAuCC,cAAvC,KAA6D,aAA7D,CACA,MAAOC,CAAAA,EAAP,KAAe,aAAf,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAA2CC,YAA3C,KAA+D,0BAA/D,CAmBA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAoC,CAClC,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,IAAD,CAAeC,MAAf,CAA0C,CAC1E,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,YAAY,CAACO,MAAlB,CACE,mBACE,oBAAC,cAAD,EACE,GAAG,CAAEH,IADP,CAEE,IAAI,CAAEA,IAFR,CAGE,KAAK,CAAEC,MAAM,CAACG,KAHhB,CAIE,KAAK,CAAEH,MAAM,CAACI,KAJhB,CAKE,iBAAiB,CAAEP,KAAK,CAACQ,oBAL3B,EADF,CASF,IAAKV,CAAAA,YAAY,CAACW,IAAlB,CACE,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEP,IADP,CAEE,IAAI,CAAEA,IAFR,CAGE,KAAK,CAAEC,MAAM,CAACG,KAHhB,CAIE,KAAK,CAAEH,MAAM,CAACI,KAJhB,CAKE,iBAAiB,CAAEP,KAAK,CAACQ,oBAL3B,EADF,CASF,IAAKV,CAAAA,YAAY,CAACY,MAAlB,CACE,mBACE,oBAAC,cAAD,EACE,GAAG,CAAER,IADP,CAEE,IAAI,CAAEA,IAFR,CAGE,KAAK,CAAEC,MAAM,CAACI,KAHhB,CAIE,iBAAiB,CAAEP,KAAK,CAACQ,oBAJ3B,EADF,CAQF,QACE,KAAM,IAAIG,CAAAA,KAAJ,CAAU,4BAA8BR,MAAM,CAACC,IAA/C,CAAN,CA/BJ,CAiCD,CAlCD,CAoCA,GAAMQ,CAAAA,OAAO,CAAGZ,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkB,SAACC,IAAD,CAAOC,GAAP,qBAChC,8BAAQ,GAAG,CAAEA,GAAb,CAAkB,KAAK,CAAED,IAAzB,EACGA,IADH,CADgC,EAAlB,CAAhB,CAKA,GAAIE,CAAAA,sBAAsB,CAAG,IAA7B,CACA,GAAIhB,KAAK,CAACiB,cAAN,GAAwBjB,CAAAA,KAAK,CAACkB,eAAlC,CAAmD,CACjD,GAAMC,CAAAA,gBAAgB,CAAGnB,KAAK,CAACkB,eAAN,CAAsBlB,KAAK,CAACiB,cAA5B,CAAzB,CACAD,sBAAsB,CAAGI,MAAM,CAACC,IAAP,CAAYF,gBAAZ,EAA8BN,GAA9B,CAAkC,SAACE,GAAD,CAAMO,GAAN,QACzDrB,CAAAA,yBAAyB,CAACc,GAAD,CAAMI,gBAAgB,CAACJ,GAAD,CAAtB,CADgC,EAAlC,CAAzB,CAGD,CACD,mBACE,4BAAM,QAAQ,CAAEf,KAAK,CAACuB,YAAtB,eACE,2BAAK,SAAS,CAAE3B,MAAM,CAAC,cAAD,CAAtB,eACE,2BAAK,SAAS,CAAEA,MAAM,CAAC,sBAAD,CAAtB,eACE,2BAAK,SAAS,CAAEA,MAAM,CAAC,6BAAD,CAAtB,sBADF,cAIE,2BAAK,SAAS,CAAEA,MAAM,CAAC,4BAAD,CAAtB,eACE,oBAAC,WAAD,EACE,iBAAiB,CAAEI,KAAK,CAACwB,iBAD3B,CAEE,cAAc,CAAExB,KAAK,CAACyB,cAFxB,CAGE,gBAAgB,CAAEzB,KAAK,CAAC0B,gBAH1B,CAIE,OAAO,CAAE1B,KAAK,CAAC2B,OAJjB,EADF,CAJF,CADF,cAcE,2BAAK,SAAS,CAAE/B,MAAM,CAAC,sBAAD,CAAtB,eACE,2BAAK,SAAS,CAAEA,MAAM,CAAC,6BAAD,CAAtB,wBADF,cAIE,2BAAK,SAAS,CAAEA,MAAM,CAAC,4BAAD,CAAtB,gBACc,GADd,cAEE,8BACE,SAAS,CAAEA,MAAM,CAACgC,MADpB,CAEE,IAAI,CAAC,YAFP,CAGE,QAAQ,CAAE5B,KAAK,CAAC6B,iBAHlB,CAIE,KAAK,CAAE7B,KAAK,CAAC8B,UAJf,eAME,8BAAQ,KAAK,CAAC,KAAd,QANF,cAOE,8BAAQ,KAAK,CAAC,SAAd,YAPF,cAQE,8BAAQ,KAAK,CAAC,WAAd,cARF,CAFF,CAJF,CAdF,cAgCE,2BAAK,SAAS,CAAElC,MAAM,CAAC,sBAAD,CAAtB,eACE,2BAAK,SAAS,CAAEA,MAAM,CAAC,6BAAD,CAAtB,8BADF,cAIE,2BAAK,SAAS,CAAEA,MAAM,CAAC,4BAAD,CAAtB,wBACsB,GADtB,cAEE,8BACE,SAAS,CAAEA,MAAM,CAACgC,MADpB,CAEE,IAAI,CAAC,iBAFP,CAGE,QAAQ,CAAE5B,KAAK,CAAC6B,iBAHlB,CAIE,KAAK,CAAE7B,KAAK,CAACiB,cAJf,EAMGL,OANH,CAFF,CAJF,CAhCF,cAgDE,2BAAK,SAAS,CAAEhB,MAAM,CAAC,sBAAD,CAAtB,eACE,2BAAK,SAAS,CAAEA,MAAM,CAAC,6BAAD,CAAtB,iCADF,cAIE,2BAAK,SAAS,CAAEA,MAAM,CAAC,4BAAD,CAAtB,EACGoB,sBADH,CAJF,CAhDF,cAwDE,2BACE,SAAS,CAAErB,EAAE,CAAC,CACZC,MAAM,CAAC,sBAAD,CADM,CAEZA,MAAM,CAAC,2BAAD,CAFM,CAAD,CADf,eAME,8BACE,SAAS,CAAED,EAAE,CAAC,CACZC,MAAM,CAACmC,GADK,CAEZnC,MAAM,CAAC,cAAD,CAFM,CAGZA,MAAM,CAAC,YAAD,CAHM,CAAD,CADf,UANF,CAxDF,CADF,CADF,CA6ED,CAED,cAAeG,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport { StringArgument, EnumArgument, NumberArgument } from \"./Arguments\";\nimport cx from \"../utils/cx\";\nimport styles from \"../App.module.css\";\nimport ClassFilter from \"./ClassFilter\";\nimport { MethodsArguments, ArgumentConfig, ArgumentType } from \"../models/insightsConfig\";\nimport { TagClass } from \"../models/filter\";\nimport { UserInputField } from \"../models/typeHelpers\";\n\n\ninterface FilterProps {\n  prediction: string;\n  selectedMethod: string;\n  methodArguments: MethodsArguments;\n  suggestedClasses: TagClass[];\n  classes: TagClass[];\n  methods: string[];\n  handleInputChange: React.ChangeEventHandler<UserInputField>;\n  handleArgumentChange: React.ChangeEventHandler<UserInputField>;\n  handleSubmit: React.FormEventHandler<HTMLFormElement>;\n  handleClassAdd: (newClass: TagClass) => void;\n  handleClassDelete: (id: number) => void;\n}\n\nfunction Filter(props: FilterProps) {\n  const createComponentFromConfig = (name: string, config: ArgumentConfig) => {\n    switch (config.type) {\n      case ArgumentType.Number:\n        return (\n          <NumberArgument\n            key={name}\n            name={name}\n            limit={config.limit}\n            value={config.value}\n            handleInputChange={props.handleArgumentChange}\n          />\n        );\n      case ArgumentType.Enum:\n        return (\n          <EnumArgument\n            key={name}\n            name={name}\n            limit={config.limit}\n            value={config.value}\n            handleInputChange={props.handleArgumentChange}\n          />\n        );\n      case ArgumentType.String:\n        return (\n          <StringArgument\n            key={name}\n            name={name}\n            value={config.value}\n            handleInputChange={props.handleArgumentChange}\n          />\n        );\n      default:\n        throw new Error(\"Unsupported config type: \" + config.type);\n    }\n  };\n\n  const methods = props.methods.map((item, key) => (\n    <option key={key} value={item}>\n      {item}\n    </option>\n  ));\n  var method_args_components = null;\n  if (props.selectedMethod in props.methodArguments) {\n    const method_arguments = props.methodArguments[props.selectedMethod];\n    method_args_components = Object.keys(method_arguments).map((key, idx) =>\n      createComponentFromConfig(key, method_arguments[key])\n    );\n  }\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={styles[\"filter-panel\"]}>\n        <div className={styles[\"filter-panel__column\"]}>\n          <div className={styles[\"filter-panel__column__title\"]}>\n            Filter by Classes\n          </div>\n          <div className={styles[\"filter-panel__column__body\"]}>\n            <ClassFilter\n              handleClassDelete={props.handleClassDelete}\n              handleClassAdd={props.handleClassAdd}\n              suggestedClasses={props.suggestedClasses}\n              classes={props.classes}\n            />\n          </div>\n        </div>\n        <div className={styles[\"filter-panel__column\"]}>\n          <div className={styles[\"filter-panel__column__title\"]}>\n            Filter by Instances\n          </div>\n          <div className={styles[\"filter-panel__column__body\"]}>\n            Prediction:{\" \"}\n            <select\n              className={styles.select}\n              name=\"prediction\"\n              onChange={props.handleInputChange}\n              value={props.prediction}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"correct\">Correct</option>\n              <option value=\"incorrect\">Incorrect</option>\n            </select>\n          </div>\n        </div>\n        <div className={styles[\"filter-panel__column\"]}>\n          <div className={styles[\"filter-panel__column__title\"]}>\n            Choose Attribution Method\n          </div>\n          <div className={styles[\"filter-panel__column__body\"]}>\n            Attribution Method:{\" \"}\n            <select\n              className={styles.select}\n              name=\"selected_method\"\n              onChange={props.handleInputChange}\n              value={props.selectedMethod}\n            >\n              {methods}\n            </select>\n          </div>\n        </div>\n        <div className={styles[\"filter-panel__column\"]}>\n          <div className={styles[\"filter-panel__column__title\"]}>\n            Attribution Method Arguments\n          </div>\n          <div className={styles[\"filter-panel__column__body\"]}>\n            {method_args_components}\n          </div>\n        </div>\n        <div\n          className={cx([\n            styles[\"filter-panel__column\"],\n            styles[\"filter-panel__column--end\"],\n          ])}\n        >\n          <button\n            className={cx([\n              styles.btn,\n              styles[\"btn--outline\"],\n              styles[\"btn--large\"],\n            ])}\n          >\n            Fetch\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}