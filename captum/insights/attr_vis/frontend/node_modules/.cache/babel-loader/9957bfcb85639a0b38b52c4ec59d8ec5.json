{"ast":null,"code":"export var ArgumentType;(function(ArgumentType){ArgumentType[\"Number\"]=\"number\";ArgumentType[\"Enum\"]=\"enum\";ArgumentType[\"String\"]=\"string\";ArgumentType[\"Boolean\"]=\"boolean\";})(ArgumentType||(ArgumentType={}));","map":{"version":3,"sources":["/home/ubuntu/DashAI/captum/insights/attr_vis/frontend/src/models/insightsConfig.ts"],"names":["ArgumentType"],"mappings":"AAAA,UAAYA,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,oBAAAA,Y,gBAAAA,Y,oBAAAA,Y,yBAAAA,Y,GAAAA,Y","sourcesContent":["export enum ArgumentType {\n    Number = \"number\",\n    Enum = \"enum\",\n    String = \"string\",\n    Boolean = \"boolean\"\n}\n\nexport type GenericArgumentConfig<T> = {\n    value: T;\n    limit: T[];\n}\n\nexport type ArgumentConfig =\n    { type: ArgumentType.Number } & GenericArgumentConfig<number> |\n    { type: ArgumentType.Enum } & GenericArgumentConfig<string> |\n    { type: ArgumentType.String } & { value: string } |\n    { type: ArgumentType.Boolean } & { value: boolean }\n\nexport interface MethodsArguments {\n    [method_name: string]: {\n        [arg_name: string]: ArgumentConfig;\n    }\n}\n\nexport interface InsightsConfig {\n    classes: string[];\n    methods: string[];\n    method_arguments: MethodsArguments;\n    selected_method: string;\n}"]},"metadata":{},"sourceType":"module"}