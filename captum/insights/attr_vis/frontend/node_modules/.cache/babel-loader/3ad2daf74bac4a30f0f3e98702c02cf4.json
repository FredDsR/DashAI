{"ast":null,"code":"import{calcHSLFromScore}from\"../utils/color\";import React from\"react\";import styles from\"../App.module.css\";import Tooltip from\"./Tooltip\";import Plot from\"./Plot\";function ImageFeature(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:styles[\"panel__column__title\"]},props.data.name,\" (Image)\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"panel__column__body\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles.gallery},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item__image\"]},/*#__PURE__*/React.createElement(\"img\",{src:\"data:image/png;base64,\"+props.data.base,alt:\"original\"})),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item__description\"]},\"Original\")),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item\"]},/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item__image\"]},/*#__PURE__*/React.createElement(\"img\",{src:\"data:image/png;base64,\"+props.data.modified,alt:\"attribution\"})),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"gallery__item__description\"]},\"Attribution Magnitude\")))));}function TextFeature(props){var color_words=props.data.base.map(function(w,i){var _props$data$modified$;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:calcHSLFromScore(props.data.modified[i],false)},className:styles[\"text-feature-word\"]},w,/*#__PURE__*/React.createElement(Tooltip,{label:(_props$data$modified$=props.data.modified[i])===null||_props$data$modified$===void 0?void 0:_props$data$modified$.toFixed(3)})),\" \");});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:styles[\"panel__column__title\"]},props.data.name,\" (Text)\"),/*#__PURE__*/React.createElement(\"div\",{className:styles[\"panel__column__body\"]},color_words));}function GeneralFeature(props){return/*#__PURE__*/React.createElement(Plot,{data:[{x:props.data.base,y:props.data.modified,type:\"bar\",marker:{color:props.data.modified.map(function(v){return v<0?\"#d45c43\":\"#80aaff\";}// red if negative, else blue\n)}}],config:{displayModeBar:false},layout:{height:300,margin:{t:20,pad:0},yaxis:{fixedrange:true,showgrid:false},xaxis:{fixedrange:false}}});}function Feature(props){var data=props.data;switch(data.type){case\"image\":return/*#__PURE__*/React.createElement(ImageFeature,{data:data});case\"text\":return/*#__PURE__*/React.createElement(TextFeature,{data:data});case\"general\":return/*#__PURE__*/React.createElement(GeneralFeature,{data:data});case\"empty\":return/*#__PURE__*/React.createElement(React.Fragment,null);default:throw new Error(\"Unsupported feature visualization type: \"+data.type);}}export default Feature;","map":{"version":3,"sources":["/home/ubuntu/DashAI/captum/insights/attr_vis/frontend/src/components/Feature.tsx"],"names":["calcHSLFromScore","React","styles","Tooltip","Plot","ImageFeature","props","data","name","gallery","base","modified","TextFeature","color_words","map","w","i","backgroundColor","toFixed","GeneralFeature","x","y","type","marker","color","v","displayModeBar","height","margin","t","pad","yaxis","fixedrange","showgrid","xaxis","Feature","Error"],"mappings":"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","sourcesContent":["import { calcHSLFromScore } from \"../utils/color\";\nimport React from \"react\";\nimport styles from \"../App.module.css\";\nimport Tooltip from \"./Tooltip\";\nimport Plot from \"./Plot\";\nimport { FeatureOutput } from \"../models/visualizationOutput\";\n\ninterface FeatureProps<T> {\n  data: T;\n}\n\ntype ImageFeatureProps = FeatureProps<{\n  base: string;\n  modified: string;\n  name: string;\n}>;\n\nfunction ImageFeature(props: ImageFeatureProps) {\n  return (\n    <>\n      <div className={styles[\"panel__column__title\"]}>\n        {props.data.name} (Image)\n      </div>\n      <div className={styles[\"panel__column__body\"]}>\n        <div className={styles.gallery}>\n          <div className={styles[\"gallery__item\"]}>\n            <div className={styles[\"gallery__item__image\"]}>\n              <img\n                src={\"data:image/png;base64,\" + props.data.base}\n                alt=\"original\"\n              />\n            </div>\n            <div className={styles[\"gallery__item__description\"]}>Original</div>\n          </div>\n          <div className={styles[\"gallery__item\"]}>\n            <div className={styles[\"gallery__item__image\"]}>\n              <img\n                src={\"data:image/png;base64,\" + props.data.modified}\n                alt=\"attribution\"\n              />\n            </div>\n            <div className={styles[\"gallery__item__description\"]}>\n              Attribution Magnitude\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype TextFeatureProps = FeatureProps<{\n  base: number[];\n  name: string;\n  modified: number[];\n}>;\n\nfunction TextFeature(props: TextFeatureProps) {\n  const color_words = props.data.base.map((w, i) => {\n    return (\n      <>\n        <span\n          style={{\n            backgroundColor: calcHSLFromScore(props.data.modified[i], false),\n          }}\n          className={styles[\"text-feature-word\"]}\n        >\n          {w}\n          <Tooltip label={props.data.modified[i]?.toFixed(3)} />\n        </span>{\" \"}\n      </>\n    );\n  });\n  return (\n    <>\n      <div className={styles[\"panel__column__title\"]}>\n        {props.data.name} (Text)\n      </div>\n      <div className={styles[\"panel__column__body\"]}>{color_words}</div>\n    </>\n  );\n}\n\ntype GeneralFeatureProps = FeatureProps<{\n  base: number[];\n  modified: number[];\n  name: string;\n}>;\n\nfunction GeneralFeature(props: GeneralFeatureProps) {\n  return (\n    <Plot\n      data={[\n        {\n          x: props.data.base,\n          y: props.data.modified,\n          type: \"bar\",\n          marker: {\n            color: props.data.modified.map(\n              (v) => (v < 0 ? \"#d45c43\" : \"#80aaff\") // red if negative, else blue\n            ),\n          },\n        },\n      ]}\n      config={{\n        displayModeBar: false,\n      }}\n      layout={{\n        height: 300,\n        margin: {\n          t: 20,\n          pad: 0,\n        },\n        yaxis: {\n          fixedrange: true,\n          showgrid: false,\n        },\n        xaxis: {\n          fixedrange: false,\n        },\n      }}\n    />\n  );\n}\n\nfunction Feature(props: {data: FeatureOutput}) {\n  const data = props.data;\n  switch (data.type) {\n    case \"image\":\n      return <ImageFeature data={data} />;\n    case \"text\":\n      return <TextFeature data={data} />;\n    case \"general\":\n      return <GeneralFeature data={data} />;\n    case \"empty\":\n      return <></>;\n    default:\n      throw new Error(\"Unsupported feature visualization type: \" + data.type);\n  }\n}\n\nexport default Feature;\n"]},"metadata":{},"sourceType":"module"}