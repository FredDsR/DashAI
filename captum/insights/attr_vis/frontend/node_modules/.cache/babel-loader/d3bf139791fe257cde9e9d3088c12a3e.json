{"ast":null,"code":"function calcHSLFromScore(percentage){var zeroDefault=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var blue_hsl=[220,100,80];var red_hsl=[10,100,67];var target_hsl=null;if(percentage>0){target_hsl=blue_hsl;}else{target_hsl=red_hsl;}var default_hsl=[0,40,zeroDefault?100:90];var abs_percent=Math.abs(percentage*0.01);if(abs_percent<0.02){return\"hsl(\".concat(default_hsl[0],\", \").concat(default_hsl[1],\"%, \").concat(default_hsl[2],\"%)\");}var color=[target_hsl[0],(target_hsl[1]-default_hsl[1])*abs_percent+default_hsl[1],(target_hsl[2]-default_hsl[2])*abs_percent+default_hsl[2]];return\"hsl(\".concat(color[0],\", \").concat(color[1],\"%, \").concat(color[2],\"%)\");}export{calcHSLFromScore};","map":{"version":3,"sources":["/home/ubuntu/DashAI/captum/insights/attr_vis/frontend/src/utils/color.ts"],"names":["calcHSLFromScore","percentage","zeroDefault","blue_hsl","red_hsl","target_hsl","default_hsl","abs_percent","Math","abs","color"],"mappings":"AAAA,QAASA,CAAAA,gBAAT,CAA0BC,UAA1B,CAAmE,IAArBC,CAAAA,WAAqB,2DAAP,KAAO,CACjE,GAAMC,CAAAA,QAAQ,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,EAAX,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAC,EAAD,CAAK,GAAL,CAAU,EAAV,CAAhB,CAEA,GAAIC,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAIJ,UAAU,CAAG,CAAjB,CAAoB,CAClBI,UAAU,CAAGF,QAAb,CACD,CAFD,IAEO,CACLE,UAAU,CAAGD,OAAb,CACD,CAED,GAAME,CAAAA,WAAW,CAAG,CAAC,CAAD,CAAI,EAAJ,CAAQJ,WAAW,CAAG,GAAH,CAAS,EAA5B,CAApB,CACA,GAAMK,CAAAA,WAAW,CAAGC,IAAI,CAACC,GAAL,CAASR,UAAU,CAAG,IAAtB,CAApB,CACA,GAAIM,WAAW,CAAG,IAAlB,CAAwB,CACtB,oBAAcD,WAAW,CAAC,CAAD,CAAzB,cAAiCA,WAAW,CAAC,CAAD,CAA5C,eAAqDA,WAAW,CAAC,CAAD,CAAhE,OACD,CAED,GAAMI,CAAAA,KAAK,CAAG,CACZL,UAAU,CAAC,CAAD,CADE,CAEZ,CAACA,UAAU,CAAC,CAAD,CAAV,CAAgBC,WAAW,CAAC,CAAD,CAA5B,EAAmCC,WAAnC,CAAiDD,WAAW,CAAC,CAAD,CAFhD,CAGZ,CAACD,UAAU,CAAC,CAAD,CAAV,CAAgBC,WAAW,CAAC,CAAD,CAA5B,EAAmCC,WAAnC,CAAiDD,WAAW,CAAC,CAAD,CAHhD,CAAd,CAKA,oBAAcI,KAAK,CAAC,CAAD,CAAnB,cAA2BA,KAAK,CAAC,CAAD,CAAhC,eAAyCA,KAAK,CAAC,CAAD,CAA9C,OACD,CAED,OAASV,gBAAT","sourcesContent":["function calcHSLFromScore(percentage: number, zeroDefault = false) {\n  const blue_hsl = [220, 100, 80];\n  const red_hsl = [10, 100, 67];\n\n  let target_hsl = null;\n  if (percentage > 0) {\n    target_hsl = blue_hsl;\n  } else {\n    target_hsl = red_hsl;\n  }\n\n  const default_hsl = [0, 40, zeroDefault ? 100 : 90];\n  const abs_percent = Math.abs(percentage * 0.01);\n  if (abs_percent < 0.02) {\n    return `hsl(${default_hsl[0]}, ${default_hsl[1]}%, ${default_hsl[2]}%)`;\n  }\n\n  const color = [\n    target_hsl[0],\n    (target_hsl[1] - default_hsl[1]) * abs_percent + default_hsl[1],\n    (target_hsl[2] - default_hsl[2]) * abs_percent + default_hsl[2],\n  ];\n  return `hsl(${color[0]}, ${color[1]}%, ${color[2]}%)`;\n}\n\nexport { calcHSLFromScore };\n"]},"metadata":{},"sourceType":"module"}